{"version":3,"file":"static/js/270.96f85955.chunk.js","mappings":"sSAOMA,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAQ,GAAD,OALM,gCAMbC,OAAQ,CACJC,QAAS,sCAGJC,EAAQ,mCAAG,2GAAOC,EAAP,+BAAY,EAAZ,SACCN,EAASO,IAAI,oBAAqB,CACnDJ,OAAQ,CACJG,KAAAA,KAHY,uBACbE,EADa,EACbA,KADa,kBAMbA,GANa,2CAAH,qDASRC,EAAY,mCAAG,WAAOC,GAAP,yFACHV,EAASO,IAAT,iBAAuBG,IADpB,uBACjBF,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAKZG,EAAW,mCAAG,WAAOC,GAAP,8FAAcN,EAAd,+BAAmB,EAAnB,SACFN,EAASO,IAAI,gBAAiB,CAC/CJ,OAAQ,CACJS,MAAAA,EACAN,KAAAA,KAJe,uBAChBE,EADgB,EAChBA,KADgB,kBAOhBA,GAPgB,2CAAH,sDAUXK,EAAY,mCAAG,WAAOH,GAAP,yFACHV,EAASO,IAAT,iBAAuBG,EAAvB,aADG,uBACjBF,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAKZM,EAAc,mCAAG,WAAOJ,GAAP,yFACLV,EAASO,IAAT,iBAAuBG,EAAvB,aADK,uBACnBF,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,qD,6ECzC3B,MAAiC,+BAAjC,EAAmF,iCAAnF,EAA4I,sC,SCE/HO,EAAS,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACE,mBACAC,UAAWC,EACXC,KAAK,SACLH,QAASA,EAHT,sBAOH,EAMM,SAASI,EAAT,GAAsC,IAAjBC,EAAgB,EAAhBA,KAAML,EAAU,EAAVA,QAChC,OACE,mBACAA,QAASA,EACTG,KAAK,SACLF,UAAWC,EAHX,UAIE,iBAAMD,UAAWC,EAAjB,SAA8CG,KAGnD,C,sDC1BD,OAAiB,E,2BCIJC,EAAU,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEjBC,GAAWC,EAAAA,EAAAA,MAEnB,OACQ,eAAIR,UAAWC,EAAAA,aAAf,SACKK,EAAMG,KAAI,gBAAEhB,EAAF,EAAEA,GAAIiB,EAAN,EAAMA,MAAN,OACf,eACAV,UAAWC,EAAAA,iBADX,UAGA,SAAC,KAAD,CAAOU,GAAE,kBAAalB,GAAMmB,MAAO,CAACC,KAAMN,GAA1C,SAAsDG,KADjDjB,EAHU,KAOjB,C,0KCVS,SAASqB,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOT,EAAP,KAAcU,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACA,GAAwBL,EAAAA,EAAAA,UAAS,GAAjC,eAAO1B,EAAP,KAAagC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBL,GAAW,GADM,mBAIE9B,EAAAA,EAAAA,IAASC,GAJX,OAIXE,EAJW,OAKjByB,GAAS,SAACV,GACN,MAAM,GAAN,eAAWA,IAAX,OAAqBf,EAAKiC,SACrB,IAPQ,gDASjBJ,EAAS,EAAD,IATS,yBAYjBF,GAAW,GAZM,4EAAH,qDAehBK,GACD,GAAE,CAAClC,IAEN,IAGQoC,EAAUC,QAAQpB,EAAMqB,QAChC,OACE,2BACQV,IAAW,SAAC,IAAD,IACXE,IAAS,sEACTM,IAAW,SAAC,IAAD,CAASnB,MAAOA,IAC5BmB,IAAW,SAAC,IAAD,CAAQ1B,QATX,WACfsB,GAAQ,SAACO,GAAD,OAAUA,EAAM,CAAhB,GACT,MAUA,C","sources":["components/API/fetch.jsx","webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","components/Gallery/Gallery.module.scss","components/Gallery/Gallery.jsx","components/pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// const MOVIE_ID_URL = `${BASE_URL}/movie/`;\n\nconst instance = axios.create({\n    baseURL: `${BASE_URL}`,\n    params: {\n        api_key: \"04cb754e3fc264242ddc48b1c691d765\"\n    }\n})\nexport const getMovie = async (page=1) => {\n    const {data} = await instance.get(\"/trending/all/day\", {\n        params: {\n            page,\n        }\n    });\n    return data\n};\n\nexport const getMovieById = async (id) => {\n    const {data} = await instance.get(`/movie/${id}`);\n    return data\n};\n\nexport const searchMovie = async (query, page=1) => {\n    const {data} = await instance.get(\"/search/movie\", {\n        params: {\n            query,\n            page,\n        }\n    });\n    return data\n};\n\nexport const getCastsById = async (id) => {\n    const {data} = await instance.get(`/movie/${id}/credits`);\n    return data\n};\n\nexport const getReviewsById = async (id) => {\n    const {data} = await instance.get(`/movie/${id}/reviews`);\n    return data\n};\n\n\n// const KEY = '04cb754e3fc264242ddc48b1c691d765';\n// const BASE_URL = 'https://api.themoviedb.org/3/movie/550';\n// // const LIMIT = 12;\n\n// export const fetch = async (query, page) => {\n//     try {\n//         const response = await axios.get\n//         (`${BASE_URL}?&api_key=${KEY}`);\n// return response.data\n//     }\n//     catch (error) {\n//         console.log(error)\n//     }\n// }","// extracted by mini-css-extract-plugin\nexport default {\"ButtonLoadMore\":\"Button_ButtonLoadMore__8k192\",\"SearchFormButton\":\"Button_SearchFormButton__4AfGY\",\"SearchFormButtonLabel\":\"Button_SearchFormButtonLabel__X4DT+\"};","import scss from \"./Button.module.scss\"\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClick }) => {\n  return (\n    <button \n    className={scss.ButtonLoadMore}\n    type=\"button\" \n    onClick={onClick}>\n      Load More\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport function SubmitBnt ({text, onClick}) {\n  return (\n    <button \n    onClick={onClick}\n    type=\"submit\" \n    className={scss.SearchFormButton}>\n      <span className={scss.SearchFormButtonLabel}>{text}</span>\n    </button>\n  ) \n}\n\nSubmitBnt.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  // text: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {};","import scss from \"./Gallery.module.scss\"\nimport PropTypes from 'prop-types';\nimport { Link , useLocation } from \"react-router-dom\";\n   \n\nexport const Gallery = ({items}) => {\n\n  const location = useLocation();\n\nreturn (\n        <ul className={scss.ImageGallery}>\n            {items.map(({id, title }) => (\n        <li\n        className={scss.ImageGalleryItem}\n        key={id}>\n        <Link  to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n        </li>))}\n        </ul>\n    )};\n\n    Gallery.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};","import  { useState, useEffect  } from 'react'\n\nimport { getMovie } from 'components/API/fetch';\nimport { Gallery } from 'components/Gallery/Gallery';\nimport Loader from 'components/Loader/loader';\nimport { Button } from 'components/Button/Button';\n\n\nexport default function HomePage() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setLoading(true)\n    \n    try {\n      const data = await getMovie(page)\n      setItems((items) => {\n          return [...items, ...data.results]\n              })\n    } catch (error) {\n      setError(error)\n    }\n    finally {\n      setLoading(false)\n    }\n    };\n    fetchMovie();\n  }, [page]);\n\nconst LoadMore = () => {\n  setPage((prev) => prev +1)\n}\n  const isImage = Boolean(items.length);\nreturn (\n  <div>\n         {loading && <Loader />}\n         {error && <p>Помилка</p>}\n         {isImage && <Gallery items={items}/>}\n        {isImage && <Button onClick={LoadMore} />}\n       </div>\n)\n}\n"],"names":["instance","axios","baseURL","params","api_key","getMovie","page","get","data","getMovieById","id","searchMovie","query","getCastsById","getReviewsById","Button","onClick","className","scss","type","SubmitBnt","text","Gallery","items","location","useLocation","map","title","to","state","from","HomePage","useState","setItems","loading","setLoading","error","setError","setPage","useEffect","fetchMovie","results","isImage","Boolean","length","prev"],"sourceRoot":""}